x = 5
x
x = 5
x
G <- read_delim("~/Documents/CM226/ps1/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
library(readr)
install.package("tidyverse")
install.packages("tidyverse")
library(readr)
data_geno <- read_delim("~/Documents/CM226/ps1/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_geno <- read_delim("~/Documents/CM226/ps1/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_geno <- read_delim("~/Documents/CM226/ps1/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_geno <- read_delim("ps1_data/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
pwd
data_geno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_geno
data_geno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.genos", " ", col_names = FALSE, trim_ws = TRUE)
data_geno
# Read data
library(readr)
data_geno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_pheno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.phenos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
# Part a -- design and implement permutation test for first SNP (col 1)
nperm <- 100000
x <- data_geno$X1 # col 1
y <- data_pheno$X1 # col 1
# get the observed test statistic T1
getTestStatistic <- function(x, y, N=250) {return ((cor(x=x, y=y) ^ 2) * N)}
a.obs <- getTestStatistic(x,y) # observed T1
a.per <- replicate(nperm, expr = getTestStatistic(x=x,y=sample(y))) # 100000 permuted T1's
# Plot
hist(a.per, xlim=c(0,20))
abline (v = a.obs, col = 'red')
# Read data
library(readr)
data_geno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_pheno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.phenos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
# Part a -- design and implement permutation test for first SNP (col 1)
nperm <- 100000
x <- data_geno$X1 # col 1
y <- data_pheno$X1 # col 1
# get the observed test statistic T1
getTestStatistic <- function(x, y, N=250) {return ((cor(x=x, y=y) ^ 2) * N)}
observed <- getTestStatistic(x,y) # observed T1
permutations <- replicate(nperm, expr = getTestStatistic(x=x,y=sample(y))) # 100000 permuted T1's
# Plot
hist(permutations, xlim=c(0,20))
abline (v = observed, col = 'red')
# Read data
library(readr)
data_geno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.genos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
data_pheno <- read_delim("~/Desktop/226/1_HW/ps1_data/ps1.phenos", " ", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
# Part a -- design and implement permutation test for first SNP (col 1)
nperm <- 100000
x <- data_geno$X1 # col 1
y <- data_pheno$X1 # col 1
# get the observed test statistic T1
getTestStatistic <- function(x, y, N=250) {return ((cor(x=x, y=y) ^ 2) * N)}
observed <- getTestStatistic(x,y) # observed T1
permutations <- replicate(nperm, expr = getTestStatistic(x=x,y=sample(y))) # 100000 permuted T1's
# Plot
hist(permutations, xlim=c(-10,20))
abline (v = observed, col = 'red')
p_val = sum(permutations > observed) / nperm # 0.007
print(p_val)
p_val = sum(permutations >= observed) / nperm # 0.007
print(p_val)
# Part a -- design and implement permutation test for first SNP (col 1)
nperm <- 100000
x <- data_geno$X1 # col 1
y <- data_pheno$X1 # col 1
# get the observed test statistic T1
getTestStatistic <- function(x, y, N=250) {return ((cor(x=x, y=y) ^ 2) * N)}
observed <- getTestStatistic(x,y) # observed T1
permutations <- replicate(nperm, expr = getTestStatistic(x=x,y=sample(y))) # 100000 permuted T1's
# plotting histogram and observed
hist(permutations, xlim=c(0,15))
abline (v = observed, col = 'red')
curve(dchisq(x, df=1), col='red')
print(1 - pchisq(observed, 1))
curve(dchisq(x, df=1), col='black')
print(1 - pchisq(observed, 1))
truth_haplotypes = "example_data_1_sol.txt"
source('~/Desktop/CM124/calculate_switch_accuracy.R')
getwd()
setwd("Users/scottyshi/Desktop/CM124")
setwd()
setwd("/Users/scottyshi/Desktop/CM124")
source('~/Desktop/CM124/calculate_switch_accuracy.R')
View(get_switch_error)
View(get_switch_error)
debugSource('~/Desktop/CM124/calculate_switch_accuracy.R')
print(haplotypes_output)
step()
haplotypes_output = read.table(haplotypes_output_file, header=F)
haplotypes_test = read.table(haplotypes_test_file,header=F)
View(haplotypes_output)
